{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/events.service\";\nexport let AddeventComponent = /*#__PURE__*/(() => {\n  var _class;\n  class AddeventComponent {\n    constructor(formBuilder, eventsService) {\n      this.formBuilder = formBuilder;\n      this.eventsService = eventsService;\n      // Initialize the form with form controls and validation\n      this.eventForm = this.formBuilder.group({\n        eventTitle: ['', Validators.required],\n        eventDescription: ['', Validators.required],\n        eventPrice: [0, [Validators.required, Validators.min(0)]],\n        eventStartDate: ['', Validators.required],\n        eventEndDate: ['', Validators.required],\n        eventNumberOfTicketAvailable: [0, [Validators.required, Validators.min(0)]],\n        eventImage: ['']\n      });\n    }\n    // Function to submit the form data\n    onSubmit() {\n      if (this.eventForm.valid) {\n        // Send the form data to backend API\n        const formData = this.eventForm.value;\n        const startDate = new Date(formData.eventStartDate); //to send date format\n        const endDate = new Date(formData.eventEndDate); //to send date format\n        const newEvent = {\n          eventId: \"\",\n          eventVariations: \"\",\n          eventCreatedById: \"\",\n          id: \"00000000-0000-0000-0000-000000000000\",\n          eventTitle: formData.eventTitle,\n          eventDescription: formData.eventDescription,\n          eventPrice: formData.eventPrice,\n          eventStartDate: startDate,\n          eventEndDate: endDate,\n          eventNumberOfTicketAvailable: formData.eventNumberOfTicketAvailable,\n          eventImage: formData.eventImage\n        };\n        console.log(newEvent);\n        // Call the createEvent method from the EventsService to add the event\n        this.eventsService.createEvent(newEvent).subscribe(response => {\n          console.log('Event added successfully:', response);\n          // Handle success, e.g., navigate to a different page\n        }, error => {\n          console.error('Error adding event:', error);\n          // Handle error\n        });\n      } else {\n        // Handle form validation errors\n        console.log('Form contains validation errors.');\n      }\n    }\n  }\n  _class = AddeventComponent;\n  _class.ɵfac = function AddeventComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.EventsService));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-addevent\"]],\n    decls: 39,\n    vars: 1,\n    consts: [[1, \"container\", \"mt-5\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"eventTitle\"], [\"type\", \"text\", \"id\", \"eventTitle\", \"formControlName\", \"eventTitle\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"eventDescription\"], [\"id\", \"eventDescription\", \"formControlName\", \"eventDescription\", \"rows\", \"4\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"eventPrice\"], [\"type\", \"number\", \"id\", \"eventPrice\", \"formControlName\", \"eventPrice\", \"required\", \"\", 1, \"form-control\"], [1, \"form-row\"], [1, \"form-group\", \"col-md-6\"], [\"for\", \"eventStartDate\"], [\"type\", \"date\", \"id\", \"eventStartDate\", \"formControlName\", \"eventStartDate\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"eventEndDate\"], [\"type\", \"date\", \"id\", \"eventEndDate\", \"formControlName\", \"eventEndDate\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"eventNumberOfTicketAvailable\"], [\"type\", \"number\", \"id\", \"eventNumberOfTicketAvailable\", \"formControlName\", \"eventNumberOfTicketAvailable\", \"required\", \"\", 1, \"form-control\"], [1, \"form-group\", \"mb-3\"], [\"for\", \"eventImage\"], [\"type\", \"text\", \"id\", \"eventImage\", \"formControlName\", \"eventImage\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function AddeventComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n        i0.ɵɵtext(5, \"Add Event\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function AddeventComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n        i0.ɵɵtext(10, \"Event Title:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\", 10);\n        i0.ɵɵtext(14, \"Event Description:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"textarea\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 7)(17, \"label\", 12);\n        i0.ɵɵtext(18, \"Event Price:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 14)(21, \"div\", 15)(22, \"label\", 16);\n        i0.ɵɵtext(23, \"Start Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 15)(26, \"label\", 18);\n        i0.ɵɵtext(27, \"End Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 19);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"div\", 7)(30, \"label\", 20);\n        i0.ɵɵtext(31, \"Number of Tickets:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"input\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 22)(34, \"label\", 23);\n        i0.ɵɵtext(35, \"Event Image URL:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"input\", 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"button\", 25);\n        i0.ɵɵtext(38, \"Add Event\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.eventForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return AddeventComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}