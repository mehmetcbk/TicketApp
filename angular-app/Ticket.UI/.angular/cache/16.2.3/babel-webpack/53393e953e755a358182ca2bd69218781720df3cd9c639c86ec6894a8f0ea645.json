{"ast":null,"code":"var _class;\nimport { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class AddeventComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    // Initialize the form with form controls and validation\n    this.eventForm = this.formBuilder.group({\n      eventTitle: ['', Validators.required],\n      eventDescription: ['', Validators.required],\n      eventPrice: [0, [Validators.required, Validators.min(0)]],\n      eventStartDate: ['', Validators.required],\n      eventEndDate: ['', Validators.required],\n      eventNumberOfTicketAvailable: [0, [Validators.required, Validators.min(0)]],\n      eventImage: ['']\n    });\n  }\n  // Function to submit the form data\n  onSubmit() {\n    if (this.eventForm.valid) {\n      // Send the form data to your backend or perform other actions\n      // Example: Send this.eventForm.value to your API\n      console.log('Form submitted with data:', this.eventForm.value);\n    } else {\n      // Handle form validation errors\n      console.log('Form contains validation errors.');\n    }\n  }\n}\n_class = AddeventComponent;\n_class.ɵfac = function AddeventComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-addevent\"]],\n  decls: 2,\n  vars: 0,\n  template: function AddeventComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"addevent works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","AddeventComponent","constructor","formBuilder","eventForm","group","eventTitle","required","eventDescription","eventPrice","min","eventStartDate","eventEndDate","eventNumberOfTicketAvailable","eventImage","onSubmit","valid","console","log","value","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","template","AddeventComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\D program files\\projectsdotnet\\angular\\second\\Ticket.UI\\src\\app\\components\\addevent\\addevent.component.ts","D:\\D program files\\projectsdotnet\\angular\\second\\Ticket.UI\\src\\app\\components\\addevent\\addevent.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-addevent',\n  templateUrl: './addevent.component.html',\n  styleUrls: ['./addevent.component.css']\n})\nexport class AddeventComponent {\n\n  eventForm: FormGroup; // Declare a FormGroup for handling the form\n\n  constructor(private formBuilder: FormBuilder) {\n    // Initialize the form with form controls and validation\n    this.eventForm = this.formBuilder.group({\n      eventTitle: ['', Validators.required],\n      eventDescription: ['', Validators.required],\n      eventPrice: [0, [Validators.required, Validators.min(0)]],\n      eventStartDate: ['', Validators.required],\n      eventEndDate: ['', Validators.required],\n      eventNumberOfTicketAvailable: [0, [Validators.required, Validators.min(0)]],\n      eventImage: [''],\n    });\n  }\n\n  // Function to submit the form data\n  onSubmit() {\n    if (this.eventForm.valid) {\n      // Send the form data to your backend or perform other actions\n      // Example: Send this.eventForm.value to your API\n      console.log('Form submitted with data:', this.eventForm.value);\n    } else {\n      // Handle form validation errors\n      console.log('Form contains validation errors.');\n    }\n  }\n}\n","<p>addevent works!</p>\n"],"mappings":";AACA,SAAgCA,UAAU,QAAO,gBAAgB;;;AAOjE,OAAM,MAAOC,iBAAiB;EAI5BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAC7B;IACA,IAAI,CAACC,SAAS,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACtCC,UAAU,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACO,QAAQ,CAAC;MACrCC,gBAAgB,EAAE,CAAC,EAAE,EAAER,UAAU,CAACO,QAAQ,CAAC;MAC3CE,UAAU,EAAE,CAAC,CAAC,EAAE,CAACT,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACzDC,cAAc,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACO,QAAQ,CAAC;MACzCK,YAAY,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACO,QAAQ,CAAC;MACvCM,4BAA4B,EAAE,CAAC,CAAC,EAAE,CAACb,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3EI,UAAU,EAAE,CAAC,EAAE;KAChB,CAAC;EACJ;EAEA;EACAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACX,SAAS,CAACY,KAAK,EAAE;MACxB;MACA;MACAC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAACd,SAAS,CAACe,KAAK,CAAC;KAC/D,MAAM;MACL;MACAF,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;;EAEnD;;SA3BWjB,iBAAiB;;mBAAjBA,MAAiB,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;;QAAjBtB,MAAiB;EAAAuB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR9BT,EAAA,CAAAW,cAAA,QAAG;MAAAX,EAAA,CAAAY,MAAA,sBAAe;MAAAZ,EAAA,CAAAa,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}