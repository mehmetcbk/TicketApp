{"ast":null,"code":"var _class;\nimport { environment } from \"../../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class TicketinformationComponent {\n  constructor(http, router, route) {\n    this.http = http;\n    this.router = router;\n    this.route = route;\n    this.tickets = [];\n    this.baseApiUrl = environment.baseapiUrl;\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe({\n      next: params => {\n        const name = params.get(\"name\");\n        if (name) {\n          this.http.get(this.baseApiUrl + '/api/payments/' + name).subscribe({\n            next: ticketRequest => {\n              this.tickets = ticketRequest;\n              console.log(this.tickets);\n            },\n            error: error => {\n              console.error('Error fetching tickets:', error);\n              // Handle the error, e.g., display an error message to the user\n            }\n          });\n        }\n      }\n    });\n  }\n\n  submit(name) {}\n}\n_class = TicketinformationComponent;\n_class.ɵfac = function TicketinformationComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-ticketinformation\"]],\n  decls: 2,\n  vars: 0,\n  template: function TicketinformationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"ticketinformation works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["environment","TicketinformationComponent","constructor","http","router","route","tickets","baseApiUrl","baseapiUrl","ngOnInit","paramMap","subscribe","next","params","name","get","ticketRequest","console","log","error","submit","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","ActivatedRoute","selectors","decls","vars","template","TicketinformationComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\D program files\\projectsdotnet\\angular\\second\\Ticket.UI\\src\\app\\components\\ticketinformation\\ticketinformation.component.ts","D:\\D program files\\projectsdotnet\\angular\\second\\Ticket.UI\\src\\app\\components\\ticketinformation\\ticketinformation.component.html"],"sourcesContent":["import {Component} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {environment} from \"../../../environments/environment\";\nimport {TicketModel} from \"../../models/ticket.model\";\n\n@Component({\n  selector: 'app-ticketinformation',\n  templateUrl: './ticketinformation.component.html',\n  styleUrls: ['./ticketinformation.component.css']\n})\nexport class TicketinformationComponent {\n\n  constructor(private http: HttpClient, private router: Router,private route:ActivatedRoute) {\n\n  }\n  tickets: TicketModel[] = [];\n  baseApiUrl: string = environment.baseapiUrl;\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe({\n      next:(params)=>{\n        const name= params.get(\"name\");\n        if(name){\n          this.http.get<TicketModel[]>(this.baseApiUrl + '/api/payments/' + name).subscribe({\n            next: (ticketRequest) => {\n              this.tickets=ticketRequest;\n              console.log(this.tickets)\n            },error: (error) => {\n              console.error('Error fetching tickets:', error);\n              // Handle the error, e.g., display an error message to the user\n            }\n          });\n        }\n      }\n    })\n\n  }\n\n  submit(name: string) {\n\n\n  }\n\n}\n","<p>ticketinformation works!</p>\n"],"mappings":";AAGA,SAAQA,WAAW,QAAO,mCAAmC;;;;AAQ7D,OAAM,MAAOC,0BAA0B;EAErCC,YAAoBC,IAAgB,EAAUC,MAAc,EAASC,KAAoB;IAArE,KAAAF,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAAiB,KAAAC,KAAK,GAALA,KAAK;IAG1E,KAAAC,OAAO,GAAkB,EAAE;IAC3B,KAAAC,UAAU,GAAWP,WAAW,CAACQ,UAAU;EAF3C;EAIAC,QAAQA,CAAA;IACN,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,SAAS,CAAC;MAC5BC,IAAI,EAAEC,MAAM,IAAG;QACb,MAAMC,IAAI,GAAED,MAAM,CAACE,GAAG,CAAC,MAAM,CAAC;QAC9B,IAAGD,IAAI,EAAC;UACN,IAAI,CAACX,IAAI,CAACY,GAAG,CAAgB,IAAI,CAACR,UAAU,GAAG,gBAAgB,GAAGO,IAAI,CAAC,CAACH,SAAS,CAAC;YAChFC,IAAI,EAAGI,aAAa,IAAI;cACtB,IAAI,CAACV,OAAO,GAACU,aAAa;cAC1BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,OAAO,CAAC;YAC3B,CAAC;YAACa,KAAK,EAAGA,KAAK,IAAI;cACjBF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;cAC/C;YACF;WACD,CAAC;;MAEN;KACD,CAAC;EAEJ;;EAEAC,MAAMA,CAACN,IAAY,GAGnB;;SA/BWb,0BAA0B;;mBAA1BA,MAA0B,EAAAoB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAE,cAAA;AAAA;;QAA1B1B,MAA0B;EAAA2B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,oCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCXvCZ,EAAA,CAAAc,cAAA,QAAG;MAAAd,EAAA,CAAAe,MAAA,+BAAwB;MAAAf,EAAA,CAAAgB,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}