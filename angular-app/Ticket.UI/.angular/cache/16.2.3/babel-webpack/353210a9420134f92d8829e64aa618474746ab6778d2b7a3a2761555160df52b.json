{"ast":null,"code":"var _class;\nimport { environment } from \"../../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction TicketinformationComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ticket_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ticket_r1.ticketId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ticket_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ticket_r1.eventId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ticket_r1.amount);\n  }\n}\nexport class TicketinformationComponent {\n  constructor(http, router, route) {\n    this.http = http;\n    this.router = router;\n    this.route = route;\n    this.tickets = [];\n    this.baseApiUrl = environment.baseapiUrl;\n    this.searchText = '';\n  }\n  searchTickets() {\n    this.http.get(this.baseApiUrl + '/api/payments/' + this.searchText).subscribe({\n      next: ticketRequest => {\n        this.tickets = ticketRequest;\n        console.log(this.tickets);\n      },\n      error: error => {\n        console.error('Error fetching tickets:', error);\n        // Handle the error, e.g., display an error message to the user\n      }\n    });\n  }\n\n  ngOnInit() {}\n  submit(name) {}\n}\n_class = TicketinformationComponent;\n_class.ɵfac = function TicketinformationComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-ticketinformation\"]],\n  decls: 22,\n  vars: 2,\n  consts: [[\"type\", \"text\", \"placeholder\", \"Enter Ticket Name\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [1, \"container\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function TicketinformationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"ticketinformation works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function TicketinformationComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.searchText = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function TicketinformationComponent_Template_button_click_4_listener() {\n        return ctx.searchTickets();\n      });\n      i0.ɵɵtext(5, \"Search\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"h1\");\n      i0.ɵɵtext(8, \"Ticket Information\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"table\", 3)(10, \"thead\")(11, \"tr\")(12, \"th\");\n      i0.ɵɵtext(13, \"Ticket ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Event ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"Amount\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"tbody\");\n      i0.ɵɵtemplate(21, TicketinformationComponent_tr_21_Template, 9, 4, \"tr\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchText);\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tickets);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["environment","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ticket_r1","ticketId","name","eventId","amount","TicketinformationComponent","constructor","http","router","route","tickets","baseApiUrl","baseapiUrl","searchText","searchTickets","get","subscribe","next","ticketRequest","console","log","error","ngOnInit","submit","ɵɵdirectiveInject","i1","HttpClient","i2","Router","ActivatedRoute","selectors","decls","vars","consts","template","TicketinformationComponent_Template","rf","ctx","ɵɵlistener","TicketinformationComponent_Template_input_ngModelChange_3_listener","$event","TicketinformationComponent_Template_button_click_4_listener","ɵɵtemplate","TicketinformationComponent_tr_21_Template","ɵɵproperty"],"sources":["D:\\D program files\\projectsdotnet\\angular\\second\\Ticket.UI\\src\\app\\components\\ticketinformation\\ticketinformation.component.ts","D:\\D program files\\projectsdotnet\\angular\\second\\Ticket.UI\\src\\app\\components\\ticketinformation\\ticketinformation.component.html"],"sourcesContent":["import {Component} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {environment} from \"../../../environments/environment\";\nimport {TicketModel} from \"../../models/ticket.model\";\n\n@Component({\n  selector: 'app-ticketinformation',\n  templateUrl: './ticketinformation.component.html',\n  styleUrls: ['./ticketinformation.component.css']\n})\nexport class TicketinformationComponent {\n\n  constructor(private http: HttpClient, private router: Router,private route:ActivatedRoute) {\n\n  }\n  tickets: TicketModel[] = [];\n  baseApiUrl: string = environment.baseapiUrl;\n  searchText: string = '';\n\n  searchTickets(){\n    this.http.get<TicketModel[]>(this.baseApiUrl + '/api/payments/' + this.searchText).subscribe({\n      next: (ticketRequest) => {\n        this.tickets=ticketRequest;\n        console.log(this.tickets)\n      },error: (error) => {\n        console.error('Error fetching tickets:', error);\n        // Handle the error, e.g., display an error message to the user\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    \n\n  }\n\n  submit(name: string) {\n\n\n  }\n\n}\n","<p>ticketinformation works!</p>\n\n<div>\n  <input type=\"text\" [(ngModel)]=\"searchText\" placeholder=\"Enter Ticket Name\" />\n  <button (click)=\"searchTickets()\">Search</button>\n</div>\n\n<div class=\"container\">\n  <h1>Ticket Information</h1>\n\n  <table class=\"table table-striped\">\n    <thead>\n    <tr>\n      <th>Ticket ID</th>\n      <th>Name</th>\n      <th>Event ID</th>\n      <th>Amount</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let ticket of tickets\">\n      <td>{{ ticket.ticketId }}</td>\n      <td>{{ ticket.name }}</td>\n      <td>{{ ticket.eventId }}</td>\n      <td>{{ ticket.amount }}</td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n"],"mappings":";AAGA,SAAQA,WAAW,QAAO,mCAAmC;;;;;;;;ICiBzDC,EAAA,CAAAC,cAAA,SAAmC;IAC7BD,EAAA,CAAAE,MAAA,GAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC9BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC1BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC7BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAHxBH,EAAA,CAAAI,SAAA,GAAqB;IAArBJ,EAAA,CAAAK,iBAAA,CAAAC,SAAA,CAAAC,QAAA,CAAqB;IACrBP,EAAA,CAAAI,SAAA,GAAiB;IAAjBJ,EAAA,CAAAK,iBAAA,CAAAC,SAAA,CAAAE,IAAA,CAAiB;IACjBR,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAK,iBAAA,CAAAC,SAAA,CAAAG,OAAA,CAAoB;IACpBT,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAK,iBAAA,CAAAC,SAAA,CAAAI,MAAA,CAAmB;;;ADb7B,OAAM,MAAOC,0BAA0B;EAErCC,YAAoBC,IAAgB,EAAUC,MAAc,EAASC,KAAoB;IAArE,KAAAF,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAAiB,KAAAC,KAAK,GAALA,KAAK;IAG1E,KAAAC,OAAO,GAAkB,EAAE;IAC3B,KAAAC,UAAU,GAAWlB,WAAW,CAACmB,UAAU;IAC3C,KAAAC,UAAU,GAAW,EAAE;EAHvB;EAKAC,aAAaA,CAAA;IACX,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAgB,IAAI,CAACJ,UAAU,GAAG,gBAAgB,GAAG,IAAI,CAACE,UAAU,CAAC,CAACG,SAAS,CAAC;MAC3FC,IAAI,EAAGC,aAAa,IAAI;QACtB,IAAI,CAACR,OAAO,GAACQ,aAAa;QAC1BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,OAAO,CAAC;MAC3B,CAAC;MAACW,KAAK,EAAGA,KAAK,IAAI;QACjBF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C;MACF;KACD,CAAC;EACJ;;EAEAC,QAAQA,CAAA,GAGR;EAEAC,MAAMA,CAACrB,IAAY,GAGnB;;SA7BWG,0BAA0B;;mBAA1BA,MAA0B,EAAAX,EAAA,CAAA8B,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAhC,EAAA,CAAA8B,iBAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAlC,EAAA,CAAA8B,iBAAA,CAAAG,EAAA,CAAAE,cAAA;AAAA;;QAA1BxB,MAA0B;EAAAyB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,oCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCXvC1C,EAAA,CAAAC,cAAA,QAAG;MAAAD,EAAA,CAAAE,MAAA,+BAAwB;MAAAF,EAAA,CAAAG,YAAA,EAAI;MAE/BH,EAAA,CAAAC,cAAA,UAAK;MACgBD,EAAA,CAAA4C,UAAA,2BAAAC,mEAAAC,MAAA;QAAA,OAAAH,GAAA,CAAAxB,UAAA,GAAA2B,MAAA;MAAA,EAAwB;MAA3C9C,EAAA,CAAAG,YAAA,EAA8E;MAC9EH,EAAA,CAAAC,cAAA,gBAAkC;MAA1BD,EAAA,CAAA4C,UAAA,mBAAAG,4DAAA;QAAA,OAASJ,GAAA,CAAAvB,aAAA,EAAe;MAAA,EAAC;MAACpB,EAAA,CAAAE,MAAA,aAAM;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAGnDH,EAAA,CAAAC,cAAA,aAAuB;MACjBD,EAAA,CAAAE,MAAA,yBAAkB;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAE3BH,EAAA,CAAAC,cAAA,eAAmC;MAG3BD,EAAA,CAAAE,MAAA,iBAAS;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAClBH,EAAA,CAAAC,cAAA,UAAI;MAAAD,EAAA,CAAAE,MAAA,YAAI;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACbH,EAAA,CAAAC,cAAA,UAAI;MAAAD,EAAA,CAAAE,MAAA,gBAAQ;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACjBH,EAAA,CAAAC,cAAA,UAAI;MAAAD,EAAA,CAAAE,MAAA,cAAM;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAGjBH,EAAA,CAAAC,cAAA,aAAO;MACPD,EAAA,CAAAgD,UAAA,KAAAC,yCAAA,gBAKK;MACLjD,EAAA,CAAAG,YAAA,EAAQ;;;MAvBSH,EAAA,CAAAI,SAAA,GAAwB;MAAxBJ,EAAA,CAAAkD,UAAA,YAAAP,GAAA,CAAAxB,UAAA,CAAwB;MAiBlBnB,EAAA,CAAAI,SAAA,IAAU;MAAVJ,EAAA,CAAAkD,UAAA,YAAAP,GAAA,CAAA3B,OAAA,CAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}