{"ast":null,"code":"import { environment } from \"../../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport let PaymentComponent = /*#__PURE__*/(() => {\n  var _class;\n  class PaymentComponent {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.baseApiUrl = environment.baseapiUrl;\n      this.eventPrice = 0;\n      this.id = \"\";\n      this.cardholderName = \"\";\n      this.creditCardNumber = \"\";\n      this.expirationDate = \"\";\n      this.cvv = \"\";\n    }\n    //amount: number=100;\n    makePayment() {\n      const paymentRequest = {\n        cardholderName: this.cardholderName,\n        creditCardNumber: this.creditCardNumber,\n        expirationDate: this.expirationDate,\n        cvv: this.cvv,\n        amount: this.eventPrice,\n        ticketId: this.id\n      };\n      this.http.post(this.baseApiUrl + '/api/payments/make-payment', paymentRequest).subscribe(response => {\n        console.log('Payment successful:', response);\n        this.router.navigate(['/success']);\n        // Handle success response from the backend\n      }, error => {\n        console.error('Payment failed:', error);\n        // Handle error response from the backend\n        this.router.navigate(['/error']);\n      });\n    }\n  }\n  _class = PaymentComponent;\n  _class.ɵfac = function PaymentComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-payment\"]],\n    inputs: {\n      eventPrice: \"eventPrice\",\n      id: \"id\"\n    },\n    decls: 31,\n    vars: 5,\n    consts: [[1, \"container\", \"mt-5\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"cardholderName\"], [\"type\", \"text\", \"id\", \"cardholderName\", \"name\", \"cardholderName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"creditCardNumber\"], [\"type\", \"text\", \"id\", \"creditCardNumber\", \"name\", \"creditCardNumber\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-row\"], [1, \"form-group\", \"col-md-6\"], [\"for\", \"expirationDate\"], [\"type\", \"text\", \"id\", \"expirationDate\", \"name\", \"expirationDate\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"cvv\"], [\"type\", \"text\", \"id\", \"cvv\", \"name\", \"cvv\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"amount\"], [\"type\", \"number\", \"id\", \"amount\", \"name\", \"amount\", \"readonly\", \"readonly\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-3\"]],\n    template: function PaymentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n        i0.ɵɵtext(5, \"Payment Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function PaymentComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.makePayment();\n        });\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n        i0.ɵɵtext(10, \"Cardholder Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.cardholderName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\", 10);\n        i0.ɵɵtext(14, \"Credit Card Number:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.creditCardNumber = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 12)(17, \"div\", 13)(18, \"label\", 14);\n        i0.ɵɵtext(19, \"Expiration Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"input\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.expirationDate = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 13)(22, \"label\", 16);\n        i0.ɵɵtext(23, \"CVV:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"input\", 17);\n        i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_24_listener($event) {\n          return ctx.cvv = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"div\", 7)(26, \"label\", 18);\n        i0.ɵɵtext(27, \"Amount:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"input\", 19);\n        i0.ɵɵlistener(\"ngModelChange\", function PaymentComponent_Template_input_ngModelChange_28_listener($event) {\n          return ctx.eventPrice = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"button\", 20);\n        i0.ɵɵtext(30, \"Make Payment\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.cardholderName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.creditCardNumber);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.expirationDate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.cvv);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.eventPrice);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm]\n  });\n  return PaymentComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}