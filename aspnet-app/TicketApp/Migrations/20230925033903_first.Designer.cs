// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TicketApp.EfCore;

#nullable disable

namespace TicketApp.Migrations
{
    [DbContext(typeof(EF_DataContext))]
    [Migration("20230925033903_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TicketApp.EfCore.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("EventCreatedById")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EventDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EventEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EventId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EventImage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EventNumberOfTicketAvailable")
                        .HasColumnType("integer");

                    b.Property<int>("EventPrice")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EventStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EventTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EventVariations")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("event");
                });

            modelBuilder.Entity("TicketApp.Model.Domain.Ticket", b =>
                {
                    b.Property<Guid>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<Guid>("TicketEventId")
                        .HasColumnType("uuid");

                    b.Property<string>("TicketName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TicketId");

                    b.ToTable("tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
